<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DataTableQueryBuilder</name>
    </assembly>
    <members>
        <member name="P:DataTableQueryBuilder.FieldOptions`1.SourceProperty">
            <summary>
            Gets the Source's property access expression that is used when searching and sorting.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.FieldOptions`1.ValueMatchMethod">
            <summary>
            Gets the value match method that is used when searching. Default is String.Contains() for strings and integers, and equals for other value types.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.FieldOptions`1.IsGlobalSearchEnabled">
            <summary>
            Checks if global search is enabled on this field.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.FieldOptions`1.SearchExpression">
            <summary>
            Gets the search expression that is used when searching.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.FieldOptions`1.SortExpression">
            <summary>
            Gets the sort expression that is used when sorting.
            </summary>
        </member>
        <member name="M:DataTableQueryBuilder.FieldOptions`1.UseSourceProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Explicitly sets the Source's property to use for searching and sorting.
            </summary>
            <typeparam name="TMember"></typeparam>
            <param name="property"></param>
        </member>
        <member name="M:DataTableQueryBuilder.FieldOptions`1.EnableGlobalSearch">
            <summary>
            Enables a global search on this field.
            </summary>
        </member>
        <member name="M:DataTableQueryBuilder.FieldOptions`1.SearchBy(System.Linq.Expressions.Expression{System.Func{`0,System.String,System.Boolean}})">
            <summary>
            Explicitly sets the search expression to be used during searching.
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:DataTableQueryBuilder.FieldOptions`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Explicitly sets the sort expression to be used during sorting.
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:DataTableQueryBuilder.FieldOptions`1.SetValueMatchMethod(DataTableQueryBuilder.ValueMatchers.ValueMatchMethod)">
            <summary>
            Explicitly sets the value match method to be used during searching.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="T:DataTableQueryBuilder.IDataTableRequest">
            <summary>
            Represents a generic data table request.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.IDataTableRequest.StartRecordNumber">
            <summary>
            Gets paging first record indicator.
            This is the start point in the current data set (zero index based).
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.IDataTableRequest.PageSize">
            <summary>
            Gets the number of records that the table can display in the current draw.
            It is expected that the number of records returned will be equal to this number, unless the server has fewer records to return.
            </summary>
        </member>
        <member name="T:DataTableQueryBuilder.IDataTableResponse">
            <summary>
            Represents a generic response for data table.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.IDataTableResponse.TotalRecordsFiltered">
            <summary>
            Gets filtered record count (total records available after filtering).
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.IDataTableResponse.Data">
            <summary>
            Gets data object (collection).
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.IDataTableResponse.AdditionalParameters">
            <summary>
            Gets aditional parameters for response.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.BuildResult`2.TotalRecords">
            <summary>
            Gets the total number of records without filtering applied.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.BuildResult`2.TotalRecordsFiltered">
            <summary>
            Gets the total number of records with filtering applied.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.BuildResult`2.BuildedQuery">
            <summary>
            Gets the builded query with specified searching and sorting configuration applied.
            </summary>
        </member>
        <member name="M:DataTableQueryBuilder.BuildResult`2.MapToResponse(AutoMapper.IMapper)">
            <summary>
            Maps builded query to data table response.
            </summary>
            <param name="mapper">An AutoMapper instance.</param>
            <returns>Data table response.</returns>
        </member>
        <member name="M:DataTableQueryBuilder.BuildResult`2.MapToResponse(AutoMapper.IMapper,System.Action{AutoMapper.IMappingOperationOptions})">
            <summary>
            Maps builded query to data table response.
            </summary>
            <param name="mapper">An AutoMapper instance.</param>
            <param name="mappingOptions">Options for a map operation.</param>
            <returns>Data table response.</returns>
        </member>
        <member name="M:DataTableQueryBuilder.BuildResult`2.MapToResponse(AutoMapper.IMapper,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Maps builded query to data table response.
            </summary>
            <param name="mapper">An AutoMapper instance.</param>
            <param name="responseAdditionalParams">Additional parameters to be added to data table response.</param>
            <returns>Data table response.</returns>
        </member>
        <member name="M:DataTableQueryBuilder.BuildResult`2.MapToResponse(AutoMapper.IMapper,System.Action{AutoMapper.IMappingOperationOptions},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Maps builded query to data table response.
            </summary>
            <param name="mapper">An AutoMapper instance.</param>
            <param name="mappingOptions">Options for a map operation.</param>
            <param name="responseAdditionalParams">Additional parameters to be added to data table response.</param>
            <returns>Data table response.</returns>
        </member>
        <member name="T:DataTableQueryBuilder.QueryBuilder`2">
            <summary>
            Builds a query according to the specific data table request.
            </summary>
            <typeparam name="TDestination">A view model that represents the list of data table fields.</typeparam>
            <typeparam name="TSource">The type of the data returned from the data source.</typeparam>
        </member>
        <member name="P:DataTableQueryBuilder.QueryBuilder`2.Options">
            <summary>
            Gets the builder options.
            </summary>
        </member>
        <member name="M:DataTableQueryBuilder.QueryBuilder`2.#ctor(DataTableQueryBuilder.IDataTableRequest)">
            <summary>
            Creates a new query builder to be used for specific data table request.
            </summary>
            <param name="request">Data table request.</param>
        </member>
        <member name="M:DataTableQueryBuilder.QueryBuilder`2.#ctor(DataTableQueryBuilder.IDataTableRequest,System.Action{DataTableQueryBuilder.QueryBuilderOptions{`0,`1}})">
            <summary>
            Creates a new request parser to be used on specific data table request.
            </summary>
            <param name="request">Data table request.</param>
            <param name="optionsAction">An action to configure the QueryBuilderOptions.</param>
        </member>
        <member name="M:DataTableQueryBuilder.QueryBuilder`2.Build(System.Linq.IQueryable{`1})">
            <summary>
            Builds the query according to the specified data table request and returns the result.
            </summary>
            <param name="sourceQuery">The query against a specific data source to which the specified searching and sorting request should be applied.</param>
            <returns>Build result.</returns>
        </member>
        <member name="P:DataTableQueryBuilder.QueryBuilderOptions`2.DateFormat">
            <summary>
            Gets or sets date format of searching values.
            </summary>
        </member>
        <member name="M:DataTableQueryBuilder.QueryBuilderOptions`2.ForField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{DataTableQueryBuilder.FieldOptions{`1}})">
            <summary>
            Customizes the options for individual field.
            </summary>
            <typeparam name="TMember"></typeparam>
            <param name="property">Expression to the field</param>
            <param name="optionsAction">An action to configure the FieldOptions.</param>
            <returns>Query builder options.</returns>
        </member>
        <member name="M:DataTableQueryBuilder.QueryBuilderOptions`2.GetFieldOptions(System.String)">
            <summary>
            Gets the options for individual field.
            </summary>
            <param name="fieldName">Field name.</param>
            <returns>Field options.</returns>
        </member>
        <member name="M:DataTableQueryBuilder.QueryBuilderOptions`2.Validate">
            <summary>
            Validates the query builder options.
            </summary>
        </member>
        <member name="M:DataTableQueryBuilder.QueryBuilderOptions`2.InitFieldOptions">
            <summary>
            Initializes the field options based on the data table request.
            </summary>
            <returns>Field options.</returns>
        </member>
        <member name="T:DataTableQueryBuilder.Sort">
            <summary>
            Represents sort/ordering for a field.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.Sort.Direction">
            <summary>
            Gets sort direction.
            </summary>
        </member>
        <member name="P:DataTableQueryBuilder.Sort.Order">
            <summary>
            Gets sort order.
            </summary>
        </member>
        <member name="M:DataTableQueryBuilder.Sort.#ctor(System.Int32,System.String)">
            <summary>
            Creates a new sort instance.
            </summary>
            <param name="field">Data field to be bound.</param>
            <param name="order">Sort order for multi-sorting.</param>
            <param name="direction">Sort direction.</param>
        </member>
    </members>
</doc>
